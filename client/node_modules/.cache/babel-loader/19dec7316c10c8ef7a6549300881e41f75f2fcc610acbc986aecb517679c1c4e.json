{"ast":null,"code":"var _jsxFileName = \"/home/luser/pgming/rentify/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport style from './App.module.css';\nimport { updateIsAuthenticated, updateIsRentant, updateUserName } from './app/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Navbar from './components/Navbar';\nimport FeedPosts from './components/FeedPosts';\nimport MyPosts from './components/MyPosts';\nimport ApplyFilter from './components/ApplyFilter';\nimport PostProperty from './components/PostProperty';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from './components/SignUpForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [properties, updateProperties] = useState();\n  const [postedProperties, updatePostedProperties] = useState();\n  const [AuthenticationForm, setAuthenticationForm] = useState(false);\n  const [userExist, updateUserExist] = useState(true);\n  const [loginData, updateLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const isRentant = false; //useSelector(state => state.user.isRentant);\n  const isAuthenticated = false; //useSelector(state => state.user.isAuthenticated);\n  const userName = \"gel\"; //useSelector(state => state.user.userName);\n\n  const getProperties = async () => {\n    const result = await fetch('/all-posts');\n    const posts = result.json();\n    updateProperties(posts);\n  };\n  const getPostedProperties = async () => {\n    const result = await fetch(`/${loginData.email}/posts`);\n    const userPosts = result.json();\n    updatePostedProperties(userPosts);\n  };\n  const isUserValid = async () => {\n    const result = await fetch('/users', {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: loginData.email,\n        password: loginData.password\n      }),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n    return result;\n  };\n  const createUserAccount = async signUpData => {\n    return await fetch('/users/add-user', {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: signUpData.email,\n        password: signUpData.password,\n        name: signUpData.name,\n        lastName: signUpData.lastName,\n        mobile: signUpData.mobile\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n\n  // useEffect(() => {\n  //   if (isRentant)\n  //     getProperties();\n  //   else\n  //     getPostedProperties();\n  // }, [isRentant])\n\n  const dispatch = useDispatch();\n  const toggleIntentionHandler = () => {\n    dispatch(updateIsRentant());\n  };\n  const interestedButtonClickHandler = () => {\n    if (!isAuthenticated) {\n      setAuthenticationForm(true);\n    } else {}\n  };\n  const signUpFormSubmitHandler = async data => {\n    await createUserAccount({\n      name: data.name,\n      lastName: data.lastName,\n      email: data.email,\n      password: data.password,\n      mobile: data.mobile\n    });\n    setAuthenticationForm(false);\n    dispatch(updateIsAuthenticated());\n    dispatch(updateUserName(data.name));\n  };\n  const loginFormSubmitHandler = async event => {\n    event.preventDefault();\n    const name = await isUserValid();\n    if (name.length > 0) {\n      setAuthenticationForm(false);\n      dispatch(updateIsAuthenticated());\n      dispatch(updateUserName(name));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style['app-container'],\n    children: [AuthenticationForm && (userExist ? /*#__PURE__*/_jsxDEV(LoginForm, {\n      onSignUpButtonClick: () => updateUserExist(false),\n      onSubmit: loginFormSubmitHandler,\n      onInputChange: e => updateLoginData(prevData => ({\n        ...prevData,\n        [e.target.name]: e.target.value\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SignUpForm, {\n      onSubmit: signUpFormSubmitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Navbar, {\n      userName: userName,\n      onLoginButtonClick: interestedButtonClickHandler,\n      toggleIntention: toggleIntentionHandler,\n      buttonText: isRentant ? \"Post\" : \"Buy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), !isRentant && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style['post-properties-container'],\n      children: [/*#__PURE__*/_jsxDEV(ApplyFilter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style['post-properties'],\n        children: properties.map((property, ind) => {\n          /*#__PURE__*/_jsxDEV(FeedPosts, {\n            data: property,\n            onInterestedButtonClick: interestedButtonClickHandler\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), !isRentant && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style['my-posts-container'],\n      children: [/*#__PURE__*/_jsxDEV(PostProperty, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style['my-posts'],\n        children: postedProperties.map((property, ind) => {\n          /*#__PURE__*/_jsxDEV(MyPosts, {\n            data: property\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HI5mb8xbVoKyVQQtcqiTdvkNFno=\", false, function () {\n  return [useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","style","updateIsAuthenticated","updateIsRentant","updateUserName","useDispatch","useSelector","Navbar","FeedPosts","MyPosts","ApplyFilter","PostProperty","LoginForm","SignUpForm","jsxDEV","_jsxDEV","App","_s","properties","updateProperties","postedProperties","updatePostedProperties","AuthenticationForm","setAuthenticationForm","userExist","updateUserExist","loginData","updateLoginData","email","password","isRentant","isAuthenticated","userName","getProperties","result","fetch","posts","json","getPostedProperties","userPosts","isUserValid","method","body","JSON","stringify","headers","createUserAccount","signUpData","name","lastName","mobile","dispatch","toggleIntentionHandler","interestedButtonClickHandler","signUpFormSubmitHandler","data","loginFormSubmitHandler","event","preventDefault","length","className","children","onSignUpButtonClick","onSubmit","onInputChange","e","prevData","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onLoginButtonClick","toggleIntention","buttonText","map","property","ind","onInterestedButtonClick","_c","$RefreshReg$"],"sources":["/home/luser/pgming/rentify/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport style from './App.module.css';\nimport { updateIsAuthenticated, updateIsRentant,updateUserName } from './app/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Navbar from './components/Navbar';\nimport FeedPosts from './components/FeedPosts';\nimport MyPosts from './components/MyPosts';\nimport ApplyFilter from './components/ApplyFilter';\nimport PostProperty from './components/PostProperty';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from './components/SignUpForm';\n\nconst App = () => {\n\n  const [properties, updateProperties] = useState();\n  const [postedProperties, updatePostedProperties] = useState();\n  const [AuthenticationForm, setAuthenticationForm] = useState(false);\n  const [userExist, updateUserExist] = useState(true);\n  const [loginData,updateLoginData]=useState({email:\"\",password:\"\"});\n\n  const isRentant = false//useSelector(state => state.user.isRentant);\n  const isAuthenticated = false//useSelector(state => state.user.isAuthenticated);\n  const userName = \"gel\"//useSelector(state => state.user.userName);\n  \n  \n\n\n  const getProperties = async () => {\n    const result = await fetch('/all-posts');\n    const posts=result.json();\n    updateProperties(posts);\n  }\n\n  const getPostedProperties = async () => {\n    const result = await fetch(`/${loginData.email}/posts`);\n    const userPosts=result.json();\n    updatePostedProperties(userPosts);\n  }\n\n  const isUserValid = async()=>{\n    const result= await fetch('/users',{\n      method:\"POST\",\n      body:JSON.stringify({\n        email:loginData.email,\n        password:loginData.password\n      }),\n      headers:{\n        \"content-type\": \"application/json\"\n      }\n    });\n    return result;\n  }\n\n  const createUserAccount=async(signUpData)=>{\n    return await fetch('/users/add-user',{\n      method:\"POST\",\n      body:JSON.stringify({\n        email:signUpData.email,\n        password:signUpData.password,\n        name:signUpData.name,\n        lastName:signUpData.lastName,\n        mobile:signUpData.mobile\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n  }\n\n  // useEffect(() => {\n  //   if (isRentant)\n  //     getProperties();\n  //   else\n  //     getPostedProperties();\n  // }, [isRentant])\n\n\n  const dispatch = useDispatch();\n\n  const toggleIntentionHandler = () => {\n    dispatch(updateIsRentant());\n  }\n\n  const interestedButtonClickHandler = () => {\n    if (!isAuthenticated) {\n      setAuthenticationForm(true);\n    }else{\n\n    }\n  }\n\n  const signUpFormSubmitHandler = async(data) => {\n      await createUserAccount({\n          name:data.name, \n          lastName:data.lastName, \n          email:data.email,\n          password:data.password,\n          mobile:data.mobile\n      });\n      setAuthenticationForm(false);\n      dispatch(updateIsAuthenticated());\n      dispatch(updateUserName(data.name));\n  }\n\n  const loginFormSubmitHandler = async(event) => {\n    event.preventDefault();\n    const name=await isUserValid();\n    if(name.length>0){\n      setAuthenticationForm(false);\n      dispatch(updateIsAuthenticated());\n      dispatch(updateUserName(name));\n    }\n  }\n\n\n\n  return (\n    <div className={style['app-container']}>\n\n      {AuthenticationForm && (userExist ?\n        <LoginForm \n          onSignUpButtonClick={() => updateUserExist(false)} \n          onSubmit={loginFormSubmitHandler} \n          onInputChange={(e)=>updateLoginData((prevData)=>({...prevData,[e.target.name]:e.target.value}))}\n        /> :\n        <SignUpForm \n          onSubmit={signUpFormSubmitHandler} \n        />\n      )}\n\n      <Navbar \n        userName={userName}\n        onLoginButtonClick={interestedButtonClickHandler}\n        toggleIntention={toggleIntentionHandler} \n        buttonText={isRentant ? \"Post\" : \"Buy\"} \n      />\n\n\n      {!isRentant &&\n        <div className={style['post-properties-container']}>\n          <ApplyFilter></ApplyFilter>\n          <div className={style['post-properties']}>\n            {properties.map((property, ind) => {\n              <FeedPosts key={ind} data={property} onInterestedButtonClick={interestedButtonClickHandler} />\n            })}\n          </div>\n        </div>\n      }\n\n\n      {!isRentant &&\n        <div className={style['my-posts-container']}>\n          <PostProperty></PostProperty>\n          <div className={style['my-posts']}>\n            {postedProperties.map((property, ind) => {\n              <MyPosts key={ind} data={property} />\n            })}\n          </div>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}