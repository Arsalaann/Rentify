{"ast":null,"code":"var _jsxFileName = \"/home/luser/pgming/rentify/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport style from './App.module.css';\nimport { updateIsAuthenticated, updateIsRentant } from './app/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Navbar from './components/Navbar';\nimport Post from './components/Post';\nimport MyPosts from './components/MyPosts';\nimport ApplyFilter from './components/ApplyFilter';\nimport PostProperty from './components/PostProperty';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from './components/SignUpForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [properties, updateProperties] = useState([]);\n  const [AuthenticationForm, setAuthenticationForm] = useState(false);\n  const [userExist, updateUserExist] = useState(true);\n  const [myBioData, updateMyBioData] = useState({\n    name: \"Login\",\n    lastName: \"\",\n    email: \"\",\n    mobile: \"\",\n    postLiked: [],\n    posts: [{}]\n  });\n  const isRentant = useSelector(state => state.user.isRentant);\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n  const getFeedPosts = async () => {\n    const result = await fetch('/all-posts');\n    const user = await result.json();\n    updateProperties(user.data);\n  };\n  const deletePostHandler = async id => {\n    const result = await fetch('/remove-post', {\n      method: \"DELETE\",\n      body: JSON.stringify({\n        id: id,\n        email: myBioData.email\n      }),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    });\n  };\n  useEffect(() => {\n    getFeedPosts();\n  }, []);\n  const dispatch = useDispatch();\n  const toggleIntentionHandler = () => {\n    if (!isAuthenticated) setAuthenticationForm(true);else dispatch(updateIsRentant());\n  };\n  const showFormHandler = () => {\n    if (!isAuthenticated) setAuthenticationForm(true);\n  };\n  const userAuthenticatedHandler = () => {\n    setAuthenticationForm(false);\n    dispatch(updateIsAuthenticated());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style['app-container'],\n    children: [AuthenticationForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style['authenticate-form-container'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: style['authenticate-form-background']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), userExist ? /*#__PURE__*/_jsxDEV(LoginForm, {\n        onSignUpButtonClick: () => updateUserExist(false),\n        userAuthenticated: userAuthenticatedHandler,\n        updateMyBioData: updateMyBioData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(SignUpForm, {\n        userAuthenticated: userAuthenticatedHandler,\n        updateMyBioData: updateMyBioData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      userName: myBioData.name,\n      onLoginButtonClick: showFormHandler,\n      toggleIntention: toggleIntentionHandler,\n      buttonText: isRentant ? \"My Property\" : \"Rent\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), isRentant && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style['post-properties-container'],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style['post-properties'],\n        children: properties.map(property => {\n          return property.posts.map(userPost => /*#__PURE__*/_jsxDEV(Post, {\n            isLiked: !isAuthenticated ? false : myBioData.postLiked.includes(userPost._id),\n            postData: userPost,\n            userData: property,\n            showForm: showFormHandler,\n            refreshFeedPosts: getFeedPosts,\n            userEmail: isAuthenticated ? myBioData.email : \"\"\n          }, userPost._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this));\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), !isRentant && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style['my-posts-container'],\n      children: [/*#__PURE__*/_jsxDEV(PostProperty, {\n        myBioData: myBioData,\n        updateMyBioData: updateMyBioData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style['my-posts'],\n        children: myBioData.posts.map((post, ind) => {\n          /*#__PURE__*/_jsxDEV(MyPosts, {\n            postData: post\n          }, ind, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IOe5Gm1khH3YdTAnFug5uns26u4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","style","updateIsAuthenticated","updateIsRentant","useDispatch","useSelector","Navbar","Post","MyPosts","ApplyFilter","PostProperty","LoginForm","SignUpForm","jsxDEV","_jsxDEV","App","_s","properties","updateProperties","AuthenticationForm","setAuthenticationForm","userExist","updateUserExist","myBioData","updateMyBioData","name","lastName","email","mobile","postLiked","posts","isRentant","state","user","isAuthenticated","getFeedPosts","result","fetch","json","data","deletePostHandler","id","method","body","JSON","stringify","headers","dispatch","toggleIntentionHandler","showFormHandler","userAuthenticatedHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSignUpButtonClick","userAuthenticated","userName","onLoginButtonClick","toggleIntention","buttonText","map","property","userPost","isLiked","includes","_id","postData","userData","showForm","refreshFeedPosts","userEmail","post","ind","_c","$RefreshReg$"],"sources":["/home/luser/pgming/rentify/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport style from './App.module.css';\nimport { updateIsAuthenticated, updateIsRentant } from './app/userSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Navbar from './components/Navbar';\nimport Post from './components/Post';\nimport MyPosts from './components/MyPosts';\nimport ApplyFilter from './components/ApplyFilter';\nimport PostProperty from './components/PostProperty';\nimport LoginForm from './components/LoginForm';\nimport SignUpForm from './components/SignUpForm';\n\nconst App = () => {\n\n  const [properties, updateProperties] = useState([]);\n  const [AuthenticationForm, setAuthenticationForm] = useState(false);\n  const [userExist, updateUserExist] = useState(true);\n  \n  const [myBioData, updateMyBioData] = \n    useState({\n      name: \"Login\",\n      lastName: \"\",\n      email: \"\",\n      mobile: \"\",\n      postLiked: [],\n      posts: [{}]\n    });\n\n  const isRentant = useSelector(state => state.user.isRentant);\n  const isAuthenticated = useSelector(state => state.user.isAuthenticated);\n\n\n  const getFeedPosts = async () => {\n    const result = await fetch('/all-posts');\n    const user = await result.json();\n    updateProperties(user.data);\n  }\n\n\n  const deletePostHandler = async (id) => {\n    const result = await fetch('/remove-post', {\n      method: \"DELETE\",\n      body: JSON.stringify({ id: id, email: myBioData.email }),\n      headers: {\n        \"content-type\": \"application/json\"\n      }\n    })\n  }\n\n  useEffect(() => {\n      getFeedPosts();\n  },[])\n\n\n  const dispatch = useDispatch();\n\n  const toggleIntentionHandler = () => {\n    if(!isAuthenticated)\n      setAuthenticationForm(true);\n    else\n      dispatch(updateIsRentant());\n  }\n\n  const showFormHandler = () => {\n    if (!isAuthenticated)\n      setAuthenticationForm(true);\n  }\n\n  const userAuthenticatedHandler = () => {\n    setAuthenticationForm(false);\n    dispatch(updateIsAuthenticated());\n  }\n\n  return (\n    <div className={style['app-container']}>\n\n      {AuthenticationForm &&\n        <div className={style['authenticate-form-container']}>\n          <div className={style['authenticate-form-background']}></div>\n          {userExist ?\n            <LoginForm\n              onSignUpButtonClick={() => updateUserExist(false)}\n              userAuthenticated={userAuthenticatedHandler}\n              updateMyBioData={updateMyBioData}\n            /> :\n            <SignUpForm\n              userAuthenticated={userAuthenticatedHandler}\n              updateMyBioData={updateMyBioData}\n            />}\n        </div>\n      }\n\n      <Navbar\n        userName={myBioData.name}\n        onLoginButtonClick={showFormHandler}\n        toggleIntention={toggleIntentionHandler}\n        buttonText={isRentant ? \"My Property\" : \"Rent\"}\n      />\n\n\n      {isRentant &&\n        <div className={style['post-properties-container']}>\n          {/* <ApplyFilter></ApplyFilter> */}\n          <div className={style['post-properties']}>\n            {properties.map((property) => {\n              return property.posts.map((userPost) =>\n                <Post\n                  key={userPost._id}\n                  isLiked={!isAuthenticated ? false : myBioData.postLiked.includes(userPost._id)}\n                  postData={userPost}\n                  userData={property}\n                  showForm={showFormHandler}\n                  refreshFeedPosts={getFeedPosts}\n                  userEmail={isAuthenticated ? myBioData.email : \"\"}\n                />\n              )\n            }\n            )}\n          </div>\n        </div>\n      }\n\n\n      {!isRentant &&\n        <div className={style['my-posts-container']}>\n          <PostProperty\n            myBioData={myBioData}\n            updateMyBioData={updateMyBioData}\n          />\n          <div className={style['my-posts']}>\n            {myBioData.posts.map((post, ind) => {\n              <MyPosts\n                key={ind}\n                postData={post}\n              />\n            })}\n          </div>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}